module.exports = {
  env: {
    browser: true,
    es2021: true,
  },
  extends: [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "airbnb",
  ],
  parser: "@typescript-eslint/parser",
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 12,
    sourceType: "module",
  },
  plugins: [
    "react",
    "@typescript-eslint",
    "react-hooks",
  ],
  rules: {
    "no-multi-spaces": ["warn", { ignoreEOLComments: false }],
    "no-console": ["warn", { allow: ["warn", "error", "info"] }],
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": ["warn"],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-explicit-any": ["off"],
    "object-curly-spacing": "off",
    "space-in-parens": ["warn", "always"],
    "@typescript-eslint/object-curly-spacing": ["warn", "always"],
    "react/jsx-curly-spacing": [2, { when: "never" }],
    "array-bracket-spacing": ["warn", "never"],
    "react/jsx-tag-spacing": ["warn", { beforeSelfClosing: "always" }],
    "computed-property-spacing": ["warn", "always"],
    "react/jsx-filename-extension": [2, { extensions: [".js", ".jsx", ".ts", ".tsx"] }],
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["warn"],
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "error",
    "no-undef": "off",
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        js: "never",
        jsx: "never",
        ts: "never",
        tsx: "never",
      },
    ],
    "@typescript-eslint/explicit-function-return-type": "off",
    "consistent-return": "off",
    "max-len": ["warn", { code: 150 }],
    "react-hooks/rules-of-hooks": "warn",
    "react-hooks/exhaustive-deps": "warn",
    "import/prefer-default-export": "off",
    "react/prop-types": "off",
    "linebreak-style": 0,
    quotes: ["warn", "double"],
  },
  settings: {
    "import/resolver": {
      node: true,
      "eslint-import-resolver-typescript": true,
    },
  },
};
